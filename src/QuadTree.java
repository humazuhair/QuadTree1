import javax.swing.*;import java.awt.*;import java.util.ArrayList;import java.util.List;public class QuadTree extends JPanel {    Rectangle boundary;    int capacity;    List<Point> points = new ArrayList<Point>();    Boolean divided = false;    QuadTree northeast;    QuadTree northwest;    QuadTree southeast;    QuadTree southwest;    public QuadTree(Rectangle boundary, int n) {        this.boundary = boundary;        this.capacity = n;    }    public void insert(Point p) {        if (!this.boundary.contains(p)){            return;        }        if (this.points.size() < this.capacity){            this.points.add(p);        }else{            if (!this.divided){                this.subdivide();            }            this.northeast.insert(p);            this.northwest.insert(p);            this.southeast.insert(p);            this.southwest.insert(p);        }    }    private void subdivide() {        Rectangle ne = new Rectangle(this.boundary.x + this.boundary.w/2, this.boundary.y - this.boundary.h/2, this.boundary.w/2, this.boundary.h/2);        this.northeast = new QuadTree(ne, 4);        Rectangle nw = new Rectangle(this.boundary.x - this.boundary.w/2, this.boundary.y - this.boundary.h/2, this.boundary.w/2, this.boundary.h/2);        this.northwest = new QuadTree(nw, 4);        Rectangle se = new Rectangle(this.boundary.x + this.boundary.w/2, this.boundary.y + this.boundary.h/2, this.boundary.w/2, this.boundary.h/2);        this.southeast = new QuadTree(se, 4);        Rectangle sw = new Rectangle(this.boundary.x - this.boundary.w/2, this.boundary.y + this.boundary.h/2, this.boundary.w/2, this.boundary.h/2);        this.southwest = new QuadTree(sw, 4);        this.divided = true;    }    void drawRectangles(Graphics g) {        Graphics2D g2d = (Graphics2D) g;        g2d.drawRect(this.boundary.x, this.boundary.y, this.boundary.w * 2, this.boundary.h * 2);        if (this.divided){            this.northeast.drawRectangles(g);            this.northwest.drawRectangles(g);            this.southeast.drawRectangles(g);            this.southwest.drawRectangles(g);        }    }}